{
  "$schema": "https://schema.railpack.com",
  "provider": "node",
  "packages": { "node": "22" },
  "caches": { "npm-install": { "directory": "/root/.npm", "type": "shared" } },
  "steps": {
    "install": {
      "commands": [
        "# detect repo root and persist it",
        "dir=$PWD; while [ \"$dir\" != \"/\" ]; do if [ -f \"$dir/package-lock.json\" ]; then echo \"$dir\" > .rp_root_dir; break; fi; dir=$(dirname \"$dir\"); done; if [ ! -f .rp_root_dir ]; then for d in /workspace /app; do if [ -f \"$d/package-lock.json\" ]; then echo \"$d\" > .rp_root_dir; break; fi; done; fi; if [ ! -f .rp_root_dir ]; then for d in /workspace/* /app/*; do [ -d \"$d\" ] || continue; if [ -f \"$d/package-lock.json\" ]; then echo \"$d\" > .rp_root_dir; break; fi; done; fi; [ -f .rp_root_dir ] || { echo \"No package-lock.json found\"; ls -la /workspace /app 2>/dev/null || true; exit 1; }",
        "# log and verify",
        "ROOT=$(cat .rp_root_dir); echo \"Repo root: $ROOT\"; ls -la \"$ROOT/package.json\" \"$ROOT/package-lock.json\" 2>/dev/null || true",
        "# install",
        "ROOT=$(cat .rp_root_dir); cd \"$ROOT\" && npm ci --legacy-peer-deps --no-audit --no-fund --prefer-offline"
      ],
      "caches": ["npm-install"]
    },
    "build": {
      "inputs": [{ "step": "install" }],
      "commands": [
        "ROOT=$(cat .rp_root_dir 2>/dev/null || true); if [ -z \"$ROOT\" ]; then dir=$PWD; while [ \"$dir\" != \"/\" ]; do if [ -f \"$dir/package-lock.json\" ]; then ROOT=\"$dir\"; break; fi; dir=$(dirname \"$dir\"); done; fi; [ -n \"$ROOT\" ] || { echo \"Repo root not found\"; exit 1; }",
        "echo \"Repo root (build): $(cat .rp_root_dir)\"",
        "ROOT=$(cat .rp_root_dir); cd \"$ROOT\" && npm run prisma:generate && npm run translate:compile && npm run build"
      ]
    }
  },
  "deploy": {
    "startCommand": "ROOT=$(cat .rp_root_dir 2>/dev/null || true); if [ -z \"$ROOT\" ]; then dir=$PWD; while [ \"$dir\" != \"/\" ]; do if [ -f \"$dir/package-lock.json\" ]; then ROOT=\"$dir\"; break; fi; dir=$(dirname \"$dir\"); done; fi; [ -n \"$ROOT\" ] || { echo \"Repo root not found\"; exit 1; }; echo \"Repo root (start): $ROOT\"; cd \"$ROOT\" && npm run start"
  }
}
