{
  "$schema": "https://schema.railpack.com",
  "provider": "node",
  "packages": { "node": "22" },
  "caches": { "npm-install": { "directory": "/root/.npm", "type": "shared" } },
  "steps": {
    "install": {
      "commands": [
        "if [ -f package-lock.json ]; then :; elif [ -f ../package-lock.json ]; then cd ..; elif [ -f ../../package-lock.json ]; then cd ../..; elif [ -f /workspace/package-lock.json ]; then cd /workspace; elif [ -f /app/package-lock.json ]; then cd /app; else echo No package-lock.json found; exit 1; fi; npm ci --legacy-peer-deps"
      ],
      "caches": ["npm-install"]
    },
    "build": {
      "inputs": [{ "step": "install" }],
      "commands": [
        "if [ -f package-lock.json ]; then :; elif [ -f ../package-lock.json ]; then cd ..; elif [ -f ../../package-lock.json ]; then cd ../..; elif [ -f /workspace/package-lock.json ]; then cd /workspace; elif [ -f /app/package-lock.json ]; then cd /app; else echo Repo root not found; exit 1; fi; npm run prisma:generate && npm run translate:compile && npm run build"
      ]
    }
  },
  "deploy": {
    "startCommand": "if [ -f package-lock.json ]; then :; elif [ -f ../package-lock.json ]; then cd ..; elif [ -f ../../package-lock.json ]; then cd ../..; elif [ -f /workspace/package-lock.json ]; then cd /workspace; elif [ -f /app/package-lock.json ]; then cd /app; else echo Repo root not found; exit 1; fi; npm run start"
  }
}
